PlayerWin = function (game) {
	Phaser.Group.call(this, game);
}

PlayerWin.prototype = Object.create(Phaser.Group.prototype);
PlayerWin.prototype.constructor = PlayerWin;

PlayerWin.prototype.show = function (score) {
	
	var bmd, background, gameOverText, scoreText, highScoreText, newHighScoreText, starText;
	//gives the bitmap a canvas property
	bmd = this.game.add.bitmapData(this.game.width, this.game.height);
	bmd.ctx.fillstyle = '#000';
	bmd.ctx.fillRect(0, 0, this.game.width, this.game.height);

	background = this.game.add.sprite(0, 0, bmd);
	//background opacity
	background.alpha = 0.5

	this.add(background);

	var isNewHighScore = false;
	var highScore = localStorage.getItem('highScore');

	if (!highScore || highScore < score) {
		
		isNewHighScore = true;
		highScore = score;
		localStorage.setItem('highScore', highScore);
	}

	this.y = this.game.height;

	gameOverText = this.game.add.bitmapText(0, 100, 'Albion', 'Thou hast slain the dragon!', 70);
	gameOverText.x = (this.game.width - gameOverText.textWidth)/2;
	this.add(gameOverText);

	scoreText = this.game.add.bitmapText(0, 150, 'Albion', 'Thine Score: ' + score, 50);
	scoreText.x = (this.game.width - scoreText.textWidth)/2;
	this.add(scoreText);

	highScoreText = this.game.add.bitmapText(0, 250, 'Albion', 'Thine High Score: ' + highScore, 50);
	highScoreText.x = (this.game.width - highScoreText.textWidth)/2;
	this.add(highScoreText);

	startText = this.game.add.bitmapText(0, 300, 'Albion', 'Presseth thine ENTER key or clicketh thine mouse if it pleases thou to play again', 50);
	startText.x = (this.game.width - startText.textWidth)/2;
	this.add(startText);

	if (isNewHighScore) {
		
		newHighScoreText = this.game.add.bitmapText(0, 50, 'Albion', 'HUZZAH! A new high score has doth been set!', 50);
		newHighScoreText.tint = 0x4ebef7;
		newHighScoreText.x = gameOverText.x + gameOverText.textWidth + 70;
		newHighScoreText.angle = 45;
		this.add(newHighScoreText);
	
	}

	this.game.add.tween(this).to({y: 0}, 1000, Phaser.Easing.Bounce.Out, true);

	var submitButton = this.game.add.button(0, 340, 'SubmitSword');
	submitButton.angle = 90;
	submitButton.x = (this.game.width - submitButton.x + 290)/2
	submitButton.scale.setTo(2,4);
	submitButton.inputEnabled = true;
   	submitButton.onInputDown.addOnce(function() {
   		submitScore();
   	
   	});
   	
   	submitScore = function () {
   		
   		$.ajax({
				url: "/scores",
	     		type: "POST",
	     		data: {
	     			score: {
	       				user_id: gon.user_id,
	       				points: PlayerWin.score,
	       				dragon_slayer: true
	     			}
	     		},
	     		success: function () {
	     			location.reload();
	     		}
	   		});


   	}

   	var submitText = this.game.add.bitmapText(0, 390, 'Albion', 'Submit Thine High Score', 50);
	submitText.x = (this.game.width - submitText.textWidth)/2;

	var restartButton = this.game.add.button(0, 430, 'SubmitSword');
	restartButton.angle = 90;
	restartButton.x = (this.game.width - restartButton.x + 290)/2
	restartButton.scale.setTo(2,4);
	restartButton.inputEnabled = true;
   	restartButton.onInputDown.addOnce(function() {
   		location.reload();
   	
   	});

   	var restartText = this.game.add.bitmapText(0, 470, 'Albion', 'Play Again', 50);
	restartText.x = (this.game.width - submitText.textWidth)/2;

};

PlayerWin.prototype.restart = function () {
	

	this.game.state.start('Game', true, false);
}